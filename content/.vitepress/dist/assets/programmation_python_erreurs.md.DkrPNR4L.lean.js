import{_ as n,c as t,j as i,a as l,G as e,an as r,B as p,o as h}from"./chunks/framework.ys1W0Hiz.js";const m=JSON.parse('{"title":"La gestion des erreurs","description":"","frontmatter":{"sidebar":"auto"},"headers":[],"relativePath":"programmation/python/erreurs.md","filePath":"programmation/python/erreurs.md","lastUpdated":1729429463000}'),o={name:"programmation/python/erreurs.md"};function k(d,s,c,u,g,E){const a=p("Badge");return h(),t("div",null,[s[0]||(s[0]=i("h1",{id:"la-gestion-des-erreurs",tabindex:"-1"},[l("La gestion des erreurs "),i("a",{class:"header-anchor",href:"#la-gestion-des-erreurs","aria-label":'Permalink to "La gestion des erreurs"'},"​")],-1)),e(a,{type:"tip",text:"Rédigé le 18/08/2024"}),e(a,{type:"warning",text:"En cours de rédaction"}),s[1]||(s[1]=r(`<h2 id="try-except" tabindex="-1">Try &amp; Except <a class="header-anchor" href="#try-except" aria-label="Permalink to &quot;Try &amp; Except&quot;">​</a></h2><p>Lorsqu&#39;une erreur se produit, ou également appelée <em>exception</em>, Python s&#39;arrête et génère un message d&#39;erreur. Ces exceptions peuvent être gérées grâce à l&#39;instruction <em><strong>Try</strong></em>.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">except</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Une erreur est survenue, la valeur demandée n&#39;existe pas.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Ici, l&#39;exception sera notée car aucune variable &quot;i&quot; n&#39;a été déclarée plus tôt. On peut également sélectionner &quot;la raison&quot; pour laquelle l&#39;exception est déclarée. <br> Par exemple, on demande une valeur <em>int</em> à l&#39;utilisateur, mais une valeur <em>str</em> est entrée, alors on déclare l&#39;exception :</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">while</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Entrer une valeur&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        break</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    except</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ValueError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#ValueError vérifie que l&#39;entrée correspond à ce qui est demandé.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Uniquement une valeur INT, réessayez.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="erreurs-dans-la-declaration-d-une-variable" tabindex="-1">Erreurs dans la déclaration d&#39;une variable <a class="header-anchor" href="#erreurs-dans-la-declaration-d-une-variable" aria-label="Permalink to &quot;Erreurs dans la déclaration d&#39;une variable&quot;">​</a></h2><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">list</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">list2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(list2)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Traceback (most recent call last):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  File </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;stdin&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, line </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">module</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TypeError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;range&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> object</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> is</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> callable</span></span></code></pre></div><p>Le problème qui survient dans ce code vient du fait que &#39;range(3)&#39; est assigné dans une variable qui est déjà utilisée par Python pour convertir un objet en liste (la fonction list).</p><p>Ainsi, quand on essaie de convertir la liste &#39;list2&#39;, avec la fonction list, l&#39;erreur <code>TypeError: &#39;range&#39; object is not callable</code> apparaît. En écrasant le mot réservé &#39;list&#39; par &#39;range(3)&#39;, on écrase la fonction list et quand on veut l&#39;utiliser plus loin dans le script, Python essaie de convertir la liste &#39;list2&#39; avec l&#39;objet &#39;range&#39; contenu à l&#39;intérieur de la variable &#39;list&#39; au lieu d&#39;utiliser la fonction list.</p><h3 id="noms-reserves-par-python" tabindex="-1">Noms réservés par Python <a class="header-anchor" href="#noms-reserves-par-python" aria-label="Permalink to &quot;Noms réservés par Python&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>False               def                 if                  raise</span></span>
<span class="line"><span>None                del                 import              return</span></span>
<span class="line"><span>True                elif                in                  try</span></span>
<span class="line"><span>and                 else                is                  while</span></span>
<span class="line"><span>as                  except              lambda              with</span></span>
<span class="line"><span>assert              finally             nonlocal            yield</span></span>
<span class="line"><span>break               for                 not                 </span></span>
<span class="line"><span>class               from                or                  </span></span>
<span class="line"><span>continue            global              pass</span></span></code></pre></div><p>À cette liste on peut ajouter toutes les fonctions de base de Python, comme la fonction str, la fonction int, la fonction dict, la fonction print, la fonction list etc... Il faut faire très <em><strong>attention à ne pas écraser des noms réservés</strong></em> par Python.</p><br><hr><div class="info custom-block"><p class="custom-block-title">Sources</p><p>Ce cours s&#39;inspire de la documentation officielle de Python :</p><p><a href="https://docs.python.org/3/library/exceptions.html" target="_blank" rel="noreferrer">https://docs.python.org/3/library/exceptions.html</a></p></div>`,15))])}const F=n(o,[["render",k]]);export{m as __pageData,F as default};
