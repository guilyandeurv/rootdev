import{_ as n,c as t,j as a,a as p,G as e,an as l,B as r,o}from"./chunks/framework.ys1W0Hiz.js";const h="/assets/Django_projet.CjVb3sUY.png",d="/assets/django_app.B_zOGkC9.png",k="/assets/listings.CHFs1nY9.png",c="/assets/INSTALLED_APPS.BaOMzGy8.png",B=JSON.parse('{"title":"Le framework Django","description":"","frontmatter":{"sidebar":"auto"},"headers":[],"relativePath":"programmation/python/django.md","filePath":"programmation/python/django.md","lastUpdated":1729429463000}'),g={name:"programmation/python/django.md"};function u(F,s,E,y,m,C){const i=r("Badge");return o(),t("div",null,[s[0]||(s[0]=a("h1",{id:"le-framework-django",tabindex:"-1"},[p("Le framework Django "),a("a",{class:"header-anchor",href:"#le-framework-django","aria-label":'Permalink to "Le framework Django"'},"​")],-1)),e(i,{type:"tip",text:"Rédigé le 19/08/2024"}),e(i,{type:"warning",text:"En cours de rédaction"}),s[1]||(s[1]=l(`<h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p>Django est un framework Python qui permet de créer des applications web rapidement et facilement. Il est conçu pour être facile à utiliser et à personnaliser. Il est composé de plusieurs modules qui peuvent être utilisés pour créer des applications web.</p><h4 id="les-versions-de-django-selon-python" tabindex="-1">Les versions de Django selon Python <a class="header-anchor" href="#les-versions-de-django-selon-python" aria-label="Permalink to &quot;Les versions de Django selon Python&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Version de Django</th><th>Versions de Python</th></tr></thead><tbody><tr><td>3.2</td><td>3.6, 3.7, 3.8, 3.9, 3.10 (ajoutée dans 3.2.9)</td></tr><tr><td>4.0</td><td>3.8, 3.9, 3.10</td></tr><tr><td>4.1</td><td>3.8, 3.9, 3.10, 3.11 (ajoutée dans 4.1.3)</td></tr><tr><td>4.2</td><td>3.8, 3.9, 3.10, 3.11, 3.12 (ajoutée dans 4.2.8)</td></tr><tr><td>5.0</td><td>3.10, 3.11, 3.12</td></tr><tr><td>5.1</td><td>3.10, 3.11, 3.12</td></tr></tbody></table><h2 id="creer-un-premier-projet" tabindex="-1">Créer un premier projet <a class="header-anchor" href="#creer-un-premier-projet" aria-label="Permalink to &quot;Créer un premier projet&quot;">​</a></h2><p>Afin de séparer les packages Django des autres projets, on peut lancer un environnement virtuel avec la commande <code>python -m venv &lt;nom-du-projet&gt;</code> et l&#39;activer avec <code>source &lt;nom-du-projet&gt;/bin/activate</code>.<br> Ensuite, on peut installer Django avec <code>python -m pip install Django</code>.<br> Le package Django est installé, ainsi qu&#39;un certain nombre de dépendances : des packages dont Django a besoin pour fonctionner.</p><p>Gardons la trace de tous ces packages dans un fichier requirements.txt. Il existe un raccourci très pratique pour faire cela :</p><p><code>pip freeze &gt; requirements.txt</code><br> Le fichier est créé avec les dépendances listées :</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>asgiref==3.3.1</span></span>
<span class="line"><span>Django==3.1.7</span></span>
<span class="line"><span>pytz==2021.1</span></span>
<span class="line"><span>sqlparse==0.4.1</span></span></code></pre></div><p>Une fois dans le projet de l&#39;application, on exécute la commande <code>django-admin startproject projet</code>, celle-ci crée un répertoire avec le nom du projet et un fichier <code>settings.py</code> qui contient les paramètres de configuration de l&#39;application :</p><p><img src="`+h+`" alt="Projet Django"></p><h4 id="qu-a-t-il-ete-fait" tabindex="-1">Qu&#39;a-t-il été fait ? <a class="header-anchor" href="#qu-a-t-il-ete-fait" aria-label="Permalink to &quot;Qu&#39;a-t-il été fait ?&quot;">​</a></h4><p>On vient de créer de générer automatiquement le code de base de notre application Django.</p><p>Le code de base est un code gabarit ou code de démarrage : c&#39;est le code de base dont on a besoin pour un projet Django fonctionnel, mais vide.</p><p>On a généré notre code de base en lançant la commande <code>django-admin</code>, suivie de la sous-commande <code>startproject</code> et en passant l&#39;argument <code>projet</code> comme nom à utiliser pour le projet. C&#39;est ce nom qui est utilisé pour le répertoire de premier niveau.</p><p>À l&#39;intérieur, on a un autre répertoire appelé <code>projet</code>, dont on parlera plus tard dans ce chapitre. On a également un script Python appelé <code>manage.py</code>.</p><p>Maintenant, lorsqu&#39;on utilisera l&#39;utilitaire de ligne de commande de Django, on l&#39;appelera via <code>manage.py</code> au lieu de <code>django-admin</code>. En fait, <code>manage.py</code> est conçu pour fonctionner spécifiquement avec le projet, alors que <code>django-admin</code> est une version plus générique de l&#39;utilitaire.</p><p>Avec le code de base en place, on a tout ce dont on a besoin pour lancer le site pour la première fois.</p><h3 id="executer-le-serveur-de-developpement" tabindex="-1">Exécuter le serveur de développement <a class="header-anchor" href="#executer-le-serveur-de-developpement" aria-label="Permalink to &quot;Exécuter le serveur de développement&quot;">​</a></h3><p>Pour lancer le serveur de développement, on utilise la commande <code>python manage.py runserver</code>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Projet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@rootdev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ➜</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .../Projet/app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (main) $ python manage.py runserver</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Watching</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changes</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> with</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> StatReloader</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Performing</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> system</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checks...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> check</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> identified</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> issues</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">silenced</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">You</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> have</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 18</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unapplied</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Your</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> may</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> work</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> properly</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> until</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrations</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> admin,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auth,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> contenttypes,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sessions.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;python manage.py migrate&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> them.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">August</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 19,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2024</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 14:55:05</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Django</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 5.1,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> using</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> settings</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;app.settings&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Starting</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> development</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://127.0.0.1:8000/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Quit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> with</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CONTROL-C.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[19/Aug/2024 14:55:16] </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;GET / HTTP/1.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 200 12068</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Found:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /favicon.ico</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[19/Aug/2024 14:55:17] </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;GET /favicon.ico HTTP/1.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 404 2205</span></span></code></pre></div><p><img src="`+d+`" alt="Page d&#39;accueil Django"></p><h2 id="creation-de-la-base-de-donnees" tabindex="-1">Création de la base de données <a class="header-anchor" href="#creation-de-la-base-de-donnees" aria-label="Permalink to &quot;Création de la base de données&quot;">​</a></h2><p>Lorsque l&#39;on a démarré le serveur, on a les lignes suivantes :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">You</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> have</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 18</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unapplied</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Your</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> may</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> work</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> properly</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> until</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrations</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> admin,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auth,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> contenttypes,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sessions.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;python manage.py migrate&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> them.</span></span></code></pre></div><p>Les migrations représentent un moyen de configurer la base de données de notre application.<br> On peut voir que l&#39;on a 18 migrations non appliquées, ce qui signifie que la base de données n&#39;est pas encore configurée.</p><p>Pour configurer la base de données, on utilise la commande <code>python manage.py migrate</code>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Projet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@rootdev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ➜</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .../Projet/app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (main) $ python manage.py migrate</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Operations</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> perform:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Apply</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> all</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrations:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> admin,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auth,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> contenttypes,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sessions</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Running</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrations:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Applying</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> contenttypes.0001_initial...</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Applying</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auth.0001_initial...</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OK</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [...]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Applying</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sessions.0001_initial...</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OK</span></span></code></pre></div><p>Suite à la création de la base de données, on aperçoit désormais le fichier <code>db.sqlite3</code> qui contient les données de la base de données.</p><div class="danger custom-block"><p class="custom-block-title">Attention</p><p>Si vous utilisez Git pour suivre votre code source, il est recommandé d&#39;ajouter <code>db.sqlite3</code> à votre fichier <code>.gitignore</code>, afin qu&#39;il ne soit pas suivi dans votre repository. Il s&#39;agit d&#39;une bonne pratique pour les vrais projets.</p></div><h2 id="generer-le-code-de-base-de-l-application" tabindex="-1">Générer le code de base de l&#39;application <a class="header-anchor" href="#generer-le-code-de-base-de-l-application" aria-label="Permalink to &quot;Générer le code de base de l&#39;application&quot;">​</a></h2><p>Dans Django, une application est une sous-section du projet entier. Django encourage à compartimenter le projet entier Django en applications, pour deux raisons principales :</p><ul><li>cela permet de garder le projet organisé et gérable au fur et à mesure qu&#39;il se développe</li><li>cela signifie qu&#39;une application peut éventuellement être réutilisée dans plusieurs projets</li></ul><p>Chaque application doit avoir un nom approprié qui représente le concept dont l&#39;application est responsable. Le premier concept que l&#39;on veut développer dans notre app est la liste des marchandises. On va donc nommer notre première application « listings ».</p><p>Pour générer le code de base de l&#39;application, on utilise la commande <code>python manage.py startapp nom_du_module</code>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Projet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@rootdev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ➜</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .../Projet/app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (main) $ python manage.py startapp listings</span></span></code></pre></div><p><img src="`+k+'" alt="listings"></p><div class="tip custom-block"><p class="custom-block-title">Conventions</p><p>Notez que <code>listings</code>, votre répertoire d&#39;applications, se trouve à côté de <code>app</code>, votre répertoire de projet. Remarquez aussi que le répertoire du projet a le même nom (app) que le répertoire au-dessus de lui par défaut. C&#39;est la convention dans la structure d&#39;un projet Django.</p></div><p>La dernière étape de l&#39;ajout de l&#39;application « listings » à notre projet « app » consiste à « installer » l&#39;application dans le projet.</p><p>Lorsque l&#39;on a généré le code de base du projet, l&#39;un des fichiers créés s&#39;appelait <code>settings.py</code>. On va ouvrir ce fichier et trouver une liste Python appelée <em><strong>INSTALLED_APPS</strong></em>. En bas de cette liste, on va ajouter la chaîne de caractères <code>listings</code>:</p><p><img src="'+c+`" alt="settings.py"></p><p>Par défaut, le code de base de Django comprend l&#39;installation d&#39;un certain nombre d&#39;applications utiles, que la plupart des projets utiliseront probablement à un moment ou à un autre, c&#39;est ces autres applications qui sont listées dans <code>INSTALLED_APPS</code>.</p><div class="tip custom-block"><p class="custom-block-title">Et les autres applications ?</p><p>Contrairement à l&#39;application « listings », ces applications supplémentaires ne se trouvent pas dans le code source, on ne voit pas de répertoire dans le code appelé <code>django.contrib.admin</code>, ces applications sont, en fait, importées depuis le package de Django que l&#39;on a installé avec pip.</p></div><h3 id="structure-actuelle-du-projet-django" tabindex="-1">Structure actuelle du projet Django <a class="header-anchor" href="#structure-actuelle-du-projet-django" aria-label="Permalink to &quot;Structure actuelle du projet Django&quot;">​</a></h3><p>On a le répertoire racine de notre repository <code>Projet/</code>, qui contient les fichiers suivants :</p><ul><li><strong>.gitignore</strong> - un fichier qui contient une liste des fichiers et répertoires à ignorer lors de la création d&#39;un commit</li><li><strong>requirements.txt</strong> - une liste des packages requis</li><li><strong>app/</strong> - le répertoire contenant notre projet Django, l&#39;application, la base de données et l&#39;utilitaire de ligne de commande</li><li><strong>app/manage.py</strong> - le script utilitaire de ligne de commande de Django</li><li><strong>app/db.sqlite3</strong> - le fichier de la base de données de Django</li><li><strong>app/app/settings.py</strong> - la configuration de l&#39;ensemble du projet</li><li><strong>app/listings/</strong>- le répertoire de l’application généré par <code>python manage.py startapp listings</code></li></ul><h2 id="creation-d-une-nouvelle-page" tabindex="-1">Création d&#39;une nouvelle page <a class="header-anchor" href="#creation-d-une-nouvelle-page" aria-label="Permalink to &quot;Création d&#39;une nouvelle page&quot;">​</a></h2><p>Pour créer une nouvelle page, on va ouvrir le fichier <code>listings/views.py</code> et éditer le code suivant :</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> django.shortcuts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> render</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Create your views here.</span></span></code></pre></div><p>On va supprimer le commentaire pour le remplacer par une simple fonction. On va également ajouter une déclaration d&#39;import supplémentaire en haut :</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> django.http </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HttpResponse</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> django.shortcuts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> render</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> hello</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(request):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HttpResponse(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&lt;h1&gt;Premier projet Django !&lt;/h1&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>On vient ici de créer une vue, l&#39;un des blocs constitutifs de l&#39;architecture MVT. Une vue a pour fonction de répondre à la visite d&#39;un utilisateur sur le site en renvoyant une page que l’utilisateur peut voir, ou en termes de Python :</p><p>Une vue est une fonction qui accepte un objet <code>HttpRequest</code> comme paramètre et retourne un objet <code>HttpResponse</code>.</p><p>Dans cet exemple de vue, on renvoie une réponse HTTP avec un contenu HTML simple : un titre H1 disant « Premier projet Django ! ».</p><p>On va désormais ouvrir le fichier <code>app/urls.py</code>. Actuellement, le code ressemble à ceci :</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">URL configuration for app project.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">The \`urlpatterns\` list routes URLs to views. For more information please see:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    https://docs.djangoproject.com/en/5.1/topics/http/urls/</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Examples:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Function views</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    1. Add an import:  from my_app import views</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    2. Add a URL to urlpatterns:  path(&#39;&#39;, views.home, name=&#39;home&#39;)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Class-based views</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    1. Add an import:  from other_app.views import Home</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    2. Add a URL to urlpatterns:  path(&#39;&#39;, Home.as_view(), name=&#39;home&#39;)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Including another URLconf</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    1. Import the include() function: from django.urls import include, path</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    2. Add a URL to urlpatterns:  path(&#39;blog/&#39;, include(&#39;blog.urls&#39;))</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> django.contrib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> admin</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> django.urls </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> path</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">urlpatterns </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    path(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;admin/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, admin.site.urls),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>On va donc importer le module views que l&#39;on vient d&#39;éditer en ajoutant une déclaration d&#39;import. Puis on va ajouter un nouvel élément à la liste <code>urlpatterns</code>, où l&#39;on va faire référence à la fonction vue que l&#39;on vient de créer :</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> django.contrib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> admin</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> django.urls </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> path</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> listings </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> views </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># On importe le module views de notre application listings</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">urlpatterns </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">path(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;admin/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, admin.site.urls),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">path(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;first/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, views.first) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># On ajoute un nouvel élément à la liste urlpatterns</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>Maintenant, chaque fois que quelqu&#39;un visite l&#39;URL <code>first/</code> sur notre site, la vue <code>first</code> va générer une page. On peut essayer de le faire en visitant l&#39;URL <code>http://127.0.0.1:8000/first/</code> dans un navigateur web après avoir lancé le serveur de développement avec la commande <code>python manage.py runserver</code>.</p><p>Django fonctionne ainsi, il génère automatiquement le code de notre page <code>html</code> sans même créer ce fichier.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Pour plus d&#39;informations sur les URLs, vous pouvez consulter la documentation officielle de Django : <a href="https://docs.djangoproject.com/en/5.1/topics/http/urls/" target="_blank" rel="noreferrer">https://docs.djangoproject.com/en/5.1/topics/http/urls/</a></p></div><hr><br><div class="info custom-block"><p class="custom-block-title">Sources</p><p>Ce cours s&#39;inspire de la documentation officielle de Django &amp; du cours OpenClassrooms &quot;Débutez avec Django&quot; : <a href="https://docs.djangoproject.com/en/5.1/" target="_blank" rel="noreferrer">https://docs.djangoproject.com/en/5.1/</a><a href="https://openclassrooms.com/fr/courses/7172076-debutez-avec-le-framework-django" target="_blank" rel="noreferrer">https://openclassrooms.com/fr/courses/7172076-debutez-avec-le-framework-django</a></p></div>`,64))])}const b=n(g,[["render",u]]);export{B as __pageData,b as default};
