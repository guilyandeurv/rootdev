import { identity } from '../_internal/identity.mjs';
import { property } from '../object/property.mjs';
import { matches } from '../predicate/matches.mjs';
import { matchesProperty } from '../predicate/matchesProperty.mjs';

function some(arr, predicate, guard) {
    if (guard != null) {
        predicate = undefined;
    }
    if (!predicate) {
        predicate = identity;
    }
    if (!Array.isArray(arr)) {
        return false;
    }
    switch (typeof predicate) {
        case 'function': {
            return arr.some(predicate);
        }
        case 'object': {
            if (Array.isArray(predicate) && predicate.length === 2) {
                const key = predicate[0];
                const value = predicate[1];
                return arr.some(matchesProperty(key, value));
            }
            else {
                return arr.some(matches(predicate));
            }
        }
        case 'string': {
            return arr.some(property(predicate));
        }
    }
}

export { some };
